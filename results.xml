<testsuites id="" name="" tests="50" failures="3" skipped="3" errors="0" time="190.634649">
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="chrome:latest:MacOS Catalina@lambdatest" tests="1" failures="1" skipped="0" time="2.802" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="2.802">
<failure message="loginLambdaTestFixture.spec.ts:9:9 Login with valid user load inventory page" type="FAILURE">
<![CDATA[  [chrome:latest:MacOS Catalina@lambdatest] › Fixture-LambdaTest/loginLambdaTestFixture.spec.ts:9:9 › Login › Login with valid user load inventory page @Fixture 

    Internal Server Error: browserType.connect: Internal Server Error

       at ../fixtures/lambdaTestFixture.ts:54

      52 |                 `${testInfo.title} - ${fileName}`
      53 |             );
    > 54 |             const browser = await chromium.connect(`wss://cdp.lambdatest.com/playwright?capabilities=
         |                                            ^
      55 |         ${encodeURIComponent(JSON.stringify(capabilities))}`);
      56 |             const ltPage = await browser.newPage(testInfo.project.use);
      57 |             await use(ltPage);
        at Object.page (/home/runner/work/Playwright/Playwright/fixtures/lambdaTestFixture.ts:54:44)

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest/trace.zip
    Usage:

        npx playwright show-trace test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Internal Server Error: browserType.connect: Internal Server Error

       at ../fixtures/lambdaTestFixture.ts:54

      52 |                 `${testInfo.title} - ${fileName}`
      53 |             );
    > 54 |             const browser = await chromium.connect(`wss://cdp.lambdatest.com/playwright?capabilities=
         |                                            ^
      55 |         ${encodeURIComponent(JSON.stringify(capabilities))}`);
      56 |             const ltPage = await browser.newPage(testInfo.project.use);
      57 |             await use(ltPage);
        at Object.page (/home/runner/work/Playwright/Playwright/fixtures/lambdaTestFixture.ts:54:44)

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest/trace.zip]]

[[ATTACHMENT|../test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest-retry1/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="chrome:latest:Windows 10@lambdatest" tests="1" failures="1" skipped="0" time="2.485" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="2.485">
<failure message="loginLambdaTestFixture.spec.ts:9:9 Login with valid user load inventory page" type="FAILURE">
<![CDATA[  [chrome:latest:Windows 10@lambdatest] › Fixture-LambdaTest/loginLambdaTestFixture.spec.ts:9:9 › Login › Login with valid user load inventory page @Fixture 

    Internal Server Error: browserType.connect: Internal Server Error

       at ../fixtures/lambdaTestFixture.ts:54

      52 |                 `${testInfo.title} - ${fileName}`
      53 |             );
    > 54 |             const browser = await chromium.connect(`wss://cdp.lambdatest.com/playwright?capabilities=
         |                                            ^
      55 |         ${encodeURIComponent(JSON.stringify(capabilities))}`);
      56 |             const ltPage = await browser.newPage(testInfo.project.use);
      57 |             await use(ltPage);
        at Object.page (/home/runner/work/Playwright/Playwright/fixtures/lambdaTestFixture.ts:54:44)

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest/trace.zip
    Usage:

        npx playwright show-trace test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Internal Server Error: browserType.connect: Internal Server Error

       at ../fixtures/lambdaTestFixture.ts:54

      52 |                 `${testInfo.title} - ${fileName}`
      53 |             );
    > 54 |             const browser = await chromium.connect(`wss://cdp.lambdatest.com/playwright?capabilities=
         |                                            ^
      55 |         ${encodeURIComponent(JSON.stringify(capabilities))}`);
      56 |             const ltPage = await browser.newPage(testInfo.project.use);
      57 |             await use(ltPage);
        at Object.page (/home/runner/work/Playwright/Playwright/fixtures/lambdaTestFixture.ts:54:44)

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest/trace.zip]]

[[ATTACHMENT|../test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest-retry1/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="1" failures="1" skipped="0" time="5.188" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="5.188">
<failure message="login.spec.ts:7:9 Should show dashboard after login" type="FAILURE">
<![CDATA[  [desktop-chromium] › AI/login.spec.ts:7:9 › AI Zero Step › Should show dashboard after login @AI_Zero_Step 

    "zerostep.error 'Account usage limit reached'. Version:v0.1.5 TaskId:01952706-d38c-748e-ae43-ba36630eb6a5"

    attachment #3: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #4: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #5: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/trace.zip
    Usage:

        npx playwright show-trace test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    "zerostep.error 'Account usage limit reached'. Version:v0.1.5 TaskId:01952706-e387-75f2-a38c-6ad11a5926de"

    attachment #3: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #4: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #5: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/video.webm]]

[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/trace.zip]]

[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/test-failed-1.png]]

[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/video.webm]]

[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/trace.zip]]
]]>
</system-out>
<system-err>
<![CDATA[zerostep.error 'Account usage limit reached'. Version:v0.1.5 TaskId:01952706-d38c-748e-ae43-ba36630eb6a5
zerostep.error 'Account usage limit reached'. Version:v0.1.5 TaskId:01952706-e387-75f2-a38c-6ad11a5926de
]]>
</system-err>
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="20.821" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="20.821">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;WebdriverIO T-Shirt - Robot Shining&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option Asphalt">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Select" value="On &quot;Size&quot; select any option">
</property>
<property name="Select" value="On &quot;Size&quot; select the option XL">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$25.00
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;WebdriverIO T-Shirt - Robot Shining&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$25.00&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$25.00&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="13.551" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="6.455">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;97549&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;97549&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;MacGyver - Jacobson&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://tight-invite.com&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;97549&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;97549&quot; is: &quot;MacGyver - Jacobson&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;97549&quot; is: &quot;https://tight-invite.com&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="7.096">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;351718&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Zulauf - Collier&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://insecure-retrospectivity.org&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;351718&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;351718&quot; is: &quot;Zulauf - Collier&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;351718&quot; is: &quot;https://insecure-retrospectivity.org&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="1.834" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="1.834">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="12.025" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="5.918">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="6.107">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="3.977" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="1.945">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="2.032">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="4.22" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="4.22">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-chromium/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="1.516" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="1.516">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="14.696" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="14.696">
<properties>
<property name="Go To" value="Go to: &quot;https://www.bing.com/maps&quot;">
</property>
<property name="Button" value="Click: &quot;Locate me&quot;">
</property>
<property name="Button" value="Check if the button is visible">
</property>
<property name="Button" value="Click: &quot;Expand/Collapse Geochain&quot;">
</property>
<property name="Assert" value="Geo name is equal to: &quot;GermanyBavariaMunich (District)&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="4.934" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="4.934">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="4.915" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="4.915">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="4.887" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="4.887">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="4.077" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="4.077">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="1" failures="0" skipped="1" time="1.928" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="1.928">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="26.677" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="26.677">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;WebdriverIO Trucker Cap&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option Black/ White">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$16.00
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;WebdriverIO Trucker Cap&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$16.00&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$16.00&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="19.689" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="9.709">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;242130&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;242130&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Schinner Inc&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://honored-coliseum.info&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;242130&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;242130&quot; is: &quot;Schinner Inc&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;242130&quot; is: &quot;https://honored-coliseum.info&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="9.98">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;554612&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Gottlieb Inc&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://unsung-brook.info/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;554612&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;554612&quot; is: &quot;Gottlieb Inc&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;554612&quot; is: &quot;https://unsung-brook.info/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="2.157" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="2.157">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="11.9" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="5.299">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="6.601">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="4.871" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="2.791">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="2.08">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="6.049" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="6.049">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-firefox/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="1.397" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="1.397">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="1" failures="0" skipped="1" time="0.621" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="0.621">
<properties>
<property name="skip" value="Geolocation not work in firefox">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="4.033" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="4.033">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="5.777" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="5.777">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="6.948" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="6.948">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="5.618" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="5.618">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="1" failures="0" skipped="1" time="1.771" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="1.771">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="29.542" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="29.542">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;Cuffed Beanie&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option Gold">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$15.50
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;Cuffed Beanie&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$15.50&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$15.50&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="24.698" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="12.397">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;731824&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;731824&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Roob - Casper&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://pessimistic-atrium.com/&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;731824&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;731824&quot; is: &quot;Roob - Casper&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;731824&quot; is: &quot;https://pessimistic-atrium.com/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="12.301">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;438809&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Wintheiser - Hoeger&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://alienated-anticodon.biz&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;438809&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;438809&quot; is: &quot;Wintheiser - Hoeger&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;438809&quot; is: &quot;https://alienated-anticodon.biz&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="4.105" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="4.105">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="15.582" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="7.658">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="7.924">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="5.918" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="3.122">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="2.796">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="5.68" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="5.68">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-webkit/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="1.158" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="1.158">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="24.74" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="24.74">
<properties>
<property name="Go To" value="Go to: &quot;https://www.bing.com/maps&quot;">
</property>
<property name="Button" value="Click: &quot;Locate me&quot;">
</property>
<property name="Button" value="Check if the button is visible">
</property>
<property name="Button" value="Click: &quot;Expand/Collapse Geochain&quot;">
</property>
<property name="Assert" value="Geo name is equal to: &quot;GermanyBavariaMunich (District)&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="4.979" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="4.979">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="11.355" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="11.355">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="8.576" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="8.576">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-02-21T05:41:47.719Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="8.313" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="8.313">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
</testsuites>