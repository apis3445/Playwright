<testsuites id="" name="" tests="50" failures="0" skipped="3" errors="0" time="127.99878100000001">
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="chrome:latest:MacOS Catalina@lambdatest" tests="1" failures="0" skipped="0" time="10.931" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="10.931">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="chrome:latest:Windows 10@lambdatest" tests="1" failures="0" skipped="0" time="14.462" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="14.462">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="7.3" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="7.3">
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="12.429" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="12.429">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;WebdriverIO Trucker Cap&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option Black">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$16.00
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;WebdriverIO Trucker Cap&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$16.00&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$16.00&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="5.767" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="2.629">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;999468&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;999468&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Oberbrunner Inc&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://repentant-cap.net/&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;999468&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;999468&quot; is: &quot;Oberbrunner Inc&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;999468&quot; is: &quot;https://repentant-cap.net/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="3.138">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;9392&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Bergnaum Group&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://compassionate-rationale.org&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;9392&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;9392&quot; is: &quot;Bergnaum Group&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;9392&quot; is: &quot;https://compassionate-rationale.org&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="0.991" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="0.991">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="4.788" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="2.289">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="2.499">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="1.73" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="0.87">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="0.86">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="2.283" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="2.283">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-chromium/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="0.694" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="0.694">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="5.993" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="5.993">
<properties>
<property name="Go To" value="Go to: &quot;https://www.bing.com/maps&quot;">
</property>
<property name="Button" value="Click: &quot;Locate me&quot;">
</property>
<property name="Button" value="Check if the button is visible">
</property>
<property name="Button" value="Click: &quot;Expand/Collapse Geochain&quot;">
</property>
<property name="Assert" value="Geo name is equal to: &quot;GermanyBavariaMunich (District)&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="1.603" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="1.603">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="2.995" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="2.995">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="3.254" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="3.254">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="2.88" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="2.88">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="1" failures="0" skipped="1" time="1.12" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="1.12">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="16.07" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="16.07">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;WebdriverIO T-Shirt - Code Test Dominate&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option Burgundy">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Select" value="On &quot;Size&quot; select any option">
</property>
<property name="Select" value="On &quot;Size&quot; select the option S">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$35.00
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;WebdriverIO T-Shirt - Code Test Dominate&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$35.00&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$35.00&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="9.181" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="4.344">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;715999&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;715999&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Fay Inc&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://sudden-kick.biz/&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;715999&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;715999&quot; is: &quot;Fay Inc&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;715999&quot; is: &quot;https://sudden-kick.biz/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="4.837">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;91775&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Padberg and Sons&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://unwelcome-flat.name&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;91775&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;91775&quot; is: &quot;Padberg and Sons&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;91775&quot; is: &quot;https://unwelcome-flat.name&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="1.181" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="1.181">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="6.316" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="2.784">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="3.532">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="2.148" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="1.157">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="0.991">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="3.022" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="3.022">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-firefox/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="0.688" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="0.688">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="1" failures="0" skipped="1" time="0.318" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="0.318">
<properties>
<property name="skip" value="Geolocation not work in firefox">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="1.96" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="1.96">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="4.176" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="4.176">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="4.949" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="4.949">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="4.1" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="4.1">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="1" failures="0" skipped="1" time="0.58" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="0.58">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="36.478" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="36.478">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;WebdriverIO T-Shirt - Code Test Dominate&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option French Navy">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Select" value="On &quot;Size&quot; select any option">
</property>
<property name="Select" value="On &quot;Size&quot; select the option XL">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$35.00
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;WebdriverIO T-Shirt - Code Test Dominate&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$35.00&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$35.00&quot;">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Api-addToCart-WebdriverIO--609ad-uld-add-an-item-to-the-cart-desktop-webkit/test-failed-1.png]]

[[ATTACHMENT|../test-results/Api-addToCart-WebdriverIO--609ad-uld-add-an-item-to-the-cart-desktop-webkit/video.webm]]

[[ATTACHMENT|../test-results/Api-addToCart-WebdriverIO--609ad-uld-add-an-item-to-the-cart-desktop-webkit/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="10.725" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="5.409">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;385225&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;385225&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Murazik, Leannon and Boehm&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://serene-guidance.name&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;385225&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;385225&quot; is: &quot;Murazik, Leannon and Boehm&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;385225&quot; is: &quot;https://serene-guidance.name&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="5.316">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;75953&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Ernser LLC&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://prestigious-smoke.info/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;75953&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;75953&quot; is: &quot;Ernser LLC&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;75953&quot; is: &quot;https://prestigious-smoke.info/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="1.135" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="1.135">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="10.297" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="4.588">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="5.709">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="4.275" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="2.217">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="2.058">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="4.187" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="4.187">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-webkit/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="1.061" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="1.061">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="12.632" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="12.632">
<properties>
<property name="Go To" value="Go to: &quot;https://www.bing.com/maps&quot;">
</property>
<property name="Button" value="Click: &quot;Locate me&quot;">
</property>
<property name="Button" value="Check if the button is visible">
</property>
<property name="Button" value="Click: &quot;Expand/Collapse Geochain&quot;">
</property>
<property name="Assert" value="Geo name is equal to: &quot;GermanyBavariaMunich (District)&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="1.971" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="1.971">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="7.865" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="7.865">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="5.952" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="5.952">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-02-09T05:41:11.019Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="6.131" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="6.131">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
</testsuites>