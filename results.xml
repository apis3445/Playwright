<testsuites id="" name="" tests="50" failures="2" skipped="3" errors="0" time="195.015328">
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="chrome:latest:MacOS Catalina@lambdatest" tests="1" failures="1" skipped="0" time="3.684" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="3.684">
<failure message="loginLambdaTestFixture.spec.ts:9:9 Login with valid user load inventory page" type="FAILURE">
<![CDATA[  [chrome:latest:MacOS Catalina@lambdatest] › Fixture-LambdaTest/loginLambdaTestFixture.spec.ts:9:9 › Login › Login with valid user load inventory page @Fixture 

    Internal Server Error: browserType.connect: Internal Server Error

       at ../fixtures/lambdaTestFixture.ts:54

      52 |                 `${testInfo.title} - ${fileName}`
      53 |             );
    > 54 |             const browser = await chromium.connect(`wss://cdp.lambdatest.com/playwright?capabilities=
         |                                            ^
      55 |         ${encodeURIComponent(JSON.stringify(capabilities))}`);
      56 |             const ltPage = await browser.newPage(testInfo.project.use);
      57 |             await use(ltPage);
        at Object.page (/home/runner/work/Playwright/Playwright/fixtures/lambdaTestFixture.ts:54:44)

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest/trace.zip
    Usage:

        npx playwright show-trace test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Internal Server Error: browserType.connect: Internal Server Error

       at ../fixtures/lambdaTestFixture.ts:54

      52 |                 `${testInfo.title} - ${fileName}`
      53 |             );
    > 54 |             const browser = await chromium.connect(`wss://cdp.lambdatest.com/playwright?capabilities=
         |                                            ^
      55 |         ${encodeURIComponent(JSON.stringify(capabilities))}`);
      56 |             const ltPage = await browser.newPage(testInfo.project.use);
      57 |             await use(ltPage);
        at Object.page (/home/runner/work/Playwright/Playwright/fixtures/lambdaTestFixture.ts:54:44)

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest/trace.zip]]

[[ATTACHMENT|../test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-MacOS-Catalina-lambdatest-retry1/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="chrome:latest:Windows 10@lambdatest" tests="1" failures="1" skipped="0" time="3.609" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="3.609">
<failure message="loginLambdaTestFixture.spec.ts:9:9 Login with valid user load inventory page" type="FAILURE">
<![CDATA[  [chrome:latest:Windows 10@lambdatest] › Fixture-LambdaTest/loginLambdaTestFixture.spec.ts:9:9 › Login › Login with valid user load inventory page @Fixture 

    Internal Server Error: browserType.connect: Internal Server Error

       at ../fixtures/lambdaTestFixture.ts:54

      52 |                 `${testInfo.title} - ${fileName}`
      53 |             );
    > 54 |             const browser = await chromium.connect(`wss://cdp.lambdatest.com/playwright?capabilities=
         |                                            ^
      55 |         ${encodeURIComponent(JSON.stringify(capabilities))}`);
      56 |             const ltPage = await browser.newPage(testInfo.project.use);
      57 |             await use(ltPage);
        at Object.page (/home/runner/work/Playwright/Playwright/fixtures/lambdaTestFixture.ts:54:44)

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest/trace.zip
    Usage:

        npx playwright show-trace test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Internal Server Error: browserType.connect: Internal Server Error

       at ../fixtures/lambdaTestFixture.ts:54

      52 |                 `${testInfo.title} - ${fileName}`
      53 |             );
    > 54 |             const browser = await chromium.connect(`wss://cdp.lambdatest.com/playwright?capabilities=
         |                                            ^
      55 |         ${encodeURIComponent(JSON.stringify(capabilities))}`);
      56 |             const ltPage = await browser.newPage(testInfo.project.use);
      57 |             await use(ltPage);
        at Object.page (/home/runner/work/Playwright/Playwright/fixtures/lambdaTestFixture.ts:54:44)

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest/trace.zip]]

[[ATTACHMENT|../test-results/Fixture-LambdaTest-loginLa-24caa-id-user-load-inventory-page-chrome-latest-Windows-10-lambdatest-retry1/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="10.291" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="10.291">
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="16.555" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="16.555">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;Cuffed Beanie&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option Spruce">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$15.50
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;Cuffed Beanie&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$15.50&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$15.50&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="10.242" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="4.907">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;281122&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;281122&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Harris Group&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://narrow-follower.com&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;281122&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;281122&quot; is: &quot;Harris Group&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;281122&quot; is: &quot;https://narrow-follower.com&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="5.335">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;919425&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;D&apos;Amore - Schmitt&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://responsible-airline.org/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;919425&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;919425&quot; is: &quot;D&apos;Amore - Schmitt&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;919425&quot; is: &quot;https://responsible-airline.org/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="1.495" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="1.495">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="6.996" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="3.567">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="3.429">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="2.885" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="1.339">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="1.546">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="3.509" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="3.509">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-chromium/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="1.059" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="1.059">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="11.329" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="11.329">
<properties>
<property name="Go To" value="Go to: &quot;https://www.bing.com/maps&quot;">
</property>
<property name="Button" value="Click: &quot;Locate me&quot;">
</property>
<property name="Button" value="Check if the button is visible">
</property>
<property name="Button" value="Click: &quot;Expand/Collapse Geochain&quot;">
</property>
<property name="Assert" value="Geo name is equal to: &quot;GermanyBavariaMunich (District)&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="2.951" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="2.951">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="5.094" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="5.094">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="5.529" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="5.529">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="5.198" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="5.198">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="1" failures="0" skipped="1" time="2.084" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="2.084">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="22.845" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="22.845">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;WebdriverIO T-Shirt - Box Logo Tee&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option Asphalt">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Select" value="On &quot;Size&quot; select any option">
</property>
<property name="Select" value="On &quot;Size&quot; select the option L">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$25.00
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;WebdriverIO T-Shirt - Box Logo Tee&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$25.00&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$25.00&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="17.261" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="9.031">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;89720&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;89720&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Hartmann LLC&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://shimmering-wafer.org/&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;89720&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;89720&quot; is: &quot;Hartmann LLC&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;89720&quot; is: &quot;https://shimmering-wafer.org/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="8.23">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;294238&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Stanton and Sons&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://defenseless-management.name/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;294238&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;294238&quot; is: &quot;Stanton and Sons&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;294238&quot; is: &quot;https://defenseless-management.name/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="2.323" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="2.323">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="31.214" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="15.872">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="15.342">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="5.35" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="2.648">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="2.702">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="5.236" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="5.236">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-firefox/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="1.41" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="1.41">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="1" failures="0" skipped="1" time="0.52" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="0.52">
<properties>
<property name="skip" value="Geolocation not work in firefox">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="3.446" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="3.446">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="5.949" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="5.949">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="7.644" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="7.644">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="5.301" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="5.301">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="1" failures="0" skipped="1" time="2.046" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="2.046">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="31.791" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="31.791">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;WebdriverIO T-Shirt - Robot Shining&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option Black">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Select" value="On &quot;Size&quot; select any option">
</property>
<property name="Select" value="On &quot;Size&quot; select the option XS">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$25.00
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;WebdriverIO T-Shirt - Robot Shining&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$25.00&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$25.00&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="20.675" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="10.114">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;235245&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;235245&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Hills, Kessler and Kuhn&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://blond-fund.name&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;235245&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;235245&quot; is: &quot;Hills, Kessler and Kuhn&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;235245&quot; is: &quot;https://blond-fund.name&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="10.561">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;438417&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;O&apos;Reilly, Cassin and Leffler&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://glum-iridescence.net/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;438417&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;438417&quot; is: &quot;O&apos;Reilly, Cassin and Leffler&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;438417&quot; is: &quot;https://glum-iridescence.net/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="2.924" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="2.924">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="21.447" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="13.477">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="7.97">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="8.06" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="4.16">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="3.9">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="5.425" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="5.425">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-webkit/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="1.296" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="1.296">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="24.633" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="24.633">
<properties>
<property name="Go To" value="Go to: &quot;https://www.bing.com/maps&quot;">
</property>
<property name="Button" value="Click: &quot;Locate me&quot;">
</property>
<property name="Button" value="Check if the button is visible">
</property>
<property name="Button" value="Click: &quot;Expand/Collapse Geochain&quot;">
</property>
<property name="Assert" value="Geo name is equal to: &quot;GermanyBavariaMunich (District)&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="3.658" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="3.658">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="13.674" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="13.674">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="9.516" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="9.516">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-03-02T05:43:19.765Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="9.646" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="9.646">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
</testsuites>