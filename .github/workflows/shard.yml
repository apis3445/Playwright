name: Shard tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  playwright-tests:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2]
        shardTotal: [2]
    env:
      BASE_URL: ${{vars.BASE_URL}}
      CONTOSO_URL: ${{vars.CONTOSO_URL}}
      LOCALE: ${{vars.LOCALE}}
      USER_NAME: ${{secrets.USER_NAME}}
      PASSWORD: ${{secrets.PASSWORD}}
      LT_USERNAME: ${{secrets.LT_USERNAME}}
      LT_ACCESS_KEY: ${{secrets.LT_ACCESS_KEY}}
      EFFIZIENTE_API_URL: ${{vars.EFFIZIENTE_API_URL}}
      EFFIZIENTE_URL: ${{vars.EFFIZIENTE_URL}}
      EFFIZIENTE_COMPANY: ${{secrets.EFFIZIENTE_COMPANY}}
      EFFIZIENTE_NORMAL_USER: ${{secrets.EFFIZIENTE_NORMAL_USER}}
      EFFIZIENTE_NORMAL_PASSWORD: ${{secrets.EFFIZIENTE_NORMAL_PASSWORD}}
      EFFIZIENTE_ADMIN_USER: ${{secrets.EFFIZIENTE_ADMIN_USER}}
      EFFIZIENTE_ADMIN_PASSWORD: ${{secrets.EFFIZIENTE_ADMIN_PASSWORD}}
      ZEROSTEP_TOKEN: ${{secrets.ZEROSTEP_TOKEN}}
      PLAYWRIGHT_SERVICE_ACCESS_TOKEN: ${{ secrets.PLAYWRIGHT_SERVICE_ACCESS_TOKEN }}
      PLAYWRIGHT_SERVICE_URL: ${{ secrets.PLAYWRIGHT_SERVICE_URL }}
      PLAYWRIGHT_SERVICE_RUN_ID: ${{ github.run_id }}-${{ github.run_attempt }}-${{ github.sha }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Install reporting package
        run: |
          npm config set @microsoft:registry=https://npm.pkg.github.com
          npm set //npm.pkg.github.com/:_authToken ${{secrets.PAT_TOKEN_PACKAGE}} 
          npm install

      - name: Run Playwright tests
        run: npx playwright test tests/AI tests/Api tests/Basic tests/Excel test/Fixture-LambdaTest test/Locale test/Qase test/Shard test/Synthetic test/VisualTesting --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} --reporter=blob

      - name: Upload blob report to GitHub Actions Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 5

  merge-reports:
    # Merge reports after playwright-tests, even if some shards have failed
    if: always()
    needs: [playwright-tests]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 3
